{"version":3,"sources":["../../../src/routes/videos.js"],"names":["application","route","post","req","res","uploadsPath","date","Date","timeStamp","getTime","nameVideo","files","file","name","fieldname","params","idUser","pathVideo","saveTo","path","join","basename","console","log","fs","createWriteStream","end","err","status","json","global","conn","collection","update","_id","mongodb","ObjectId","$push","videos","title","records","get","streamVideos","VideosController"],"mappings":";;;;;;kBAUe,UAASA,WAAT,EAAqB;;AAEhC;AACAA,gBAAYC,KAAZ,CAAkB,sBAAlB,EAA0CC,IAA1C,CAA+C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzD,YAAMC,cAAc,WAApB;;AAEA;AACA,YAAIC,OAAO,IAAIC,IAAJ,EAAX;;AAEA,YAAIC,YAAaF,KAAKG,OAAL,EAAjB;;AAEA,YAAIC,YAAYP,IAAIQ,KAAJ,CAAUC,IAAV,CAAeC,IAA/B;AACA,YAAIC,YAAYX,IAAIY,MAAJ,CAAWC,MAAX,GAAkB,GAAlB,GAAsBR,SAAtB,GAAgC,GAAhC,GAAoCE,SAApD;AACA,YAAIO,YAAYH,SAAhB;;AAEA,YAAII,SAASC,eAAKC,IAAL,CAAUf,WAAV,EAAuBc,eAAKE,QAAL,CAAcP,SAAd,CAAvB,CAAb;AACAQ,gBAAQC,GAAR,CAAY,gBAAeL,MAA3B;;AAEAM,qBAAGC,iBAAH,CAAqBP,MAArB,EAA6BQ,GAA7B,CAAiC,UAACC,GAAD,EAAS;AACtC,gBAAGA,GAAH,EAAO;AACHvB,oBAAIwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAC,SAASF,GAAV,EAArB;AACH,aAFD,MAEO;AACHG,uBAAOC,IAAP,CAAYC,UAAZ,CAAuB,OAAvB,EAAgC,UAACL,GAAD,EAAMK,UAAN,EAAqB;AACjDA,+BAAWC,MAAX,CACI,EAAEC,KAAKC,kBAAQC,QAAR,CAAiBjC,IAAIY,MAAJ,CAAWC,MAA5B,CAAP,EADJ,EAEI,EAACqB,OAAQ;AACDC,oCAAQ;AACJnB,sCAAMF,SADF;AAEJsB,uCAAO7B;AAFH;;AADP;AAAT,qBAFJ,EAUI,EAVJ,EAWI,UAACiB,GAAD,EAAMa,OAAN,EAAkB;AACd,4BAAGb,GAAH,EAAQ;AACJvB,gCAAIwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAC,SAASF,GAAV,EAArB;AACH,yBAFD,MAEO;AACHvB,gCAAIwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAC,UAAU,4BAAX,EAArB;AACH;AAEJ,qBAlBL;AAoBH,iBArBD;;AAuBA;AACH;AACJ,SA7BD;AA8BH,KA7CD;;AA+CA;AACA7B,gBAAYyC,GAAZ,CAAgB,sBAAhB,EAAwC,UAACtC,GAAD,EAAMC,GAAN,EAAc;AAClDkB,gBAAQC,GAAR,CAAY,eAAZ;AACAe,eAAOI,YAAP,CAAoBvC,GAApB,EAAyBC,GAAzB;AACH,KAHD;AAMH,C;;AAnED;;;;AAIA;;;;AACA;;;;AACA;;;;;;AAJA,IAAMkC,SAAS,IAAIK,gBAAJ,EAAf","file":"videos.js","sourcesContent":["import VideosController from '../controllers/videos';\r\n\r\nconst videos = new VideosController();\r\n\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport mongodb from 'mongodb';\r\n\r\n\r\n\r\nexport default function(application){\r\n\r\n    //Usuario envia Video\r\n    application.route('/user/:idUser/videos').post((req, res) => {\r\n        const uploadsPath = './uploads';\r\n\r\n        // console.log(req.files);\r\n        var date = new Date();\r\n\r\n        let timeStamp  = date.getTime();\r\n\r\n        var nameVideo = req.files.file.name;\r\n        var fieldname = req.params.idUser+'_'+timeStamp+'_'+nameVideo;\r\n        var pathVideo = fieldname;\r\n\r\n        var saveTo = path.join(uploadsPath, path.basename(fieldname));\r\n        console.log('video ok 1 ' +saveTo);\r\n\r\n        fs.createWriteStream(saveTo).end((err) => {\r\n            if(err){\r\n                res.status(500).json({'error': err});\r\n            } else {\r\n                global.conn.collection('users', (err, collection) => {\r\n                    collection.update( \r\n                        { _id: mongodb.ObjectId(req.params.idUser) },\r\n                        {$push : {\r\n                                videos: {\r\n                                    path: pathVideo,\r\n                                    title: nameVideo\r\n                                }\r\n\r\n                            }\r\n                        },\r\n                        {},\r\n                        (err, records) => {\r\n                            if(err) {\r\n                                res.status(500).json({'error': err});\r\n                            } else {\r\n                                res.status(200).json({'status': 'successful video insertion'});\r\n                            }\r\n\r\n                        }\r\n                    )\r\n                })\r\n\r\n                // res.status(200).json({'status': 'successful video insertion'});\r\n            }\r\n        })\r\n    });\r\n\r\n    // Rota para Retorno da Lista de Videos do Usuario\r\n    application.get('/user/:idUser/videos', (req, res) => {\r\n        console.log('stream videos');\r\n        videos.streamVideos(req, res);\r\n    });\r\n\r\n\r\n}"]}